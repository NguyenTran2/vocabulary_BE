// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VocabularyProject.Models;

#nullable disable

namespace VocabularyProject.Migrations
{
    [DbContext(typeof(VocabularyDbContext))]
    [Migration("20221205154738_FirstAdd")]
    partial class FirstAdd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VocabularyProject.Models.Set", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Sets");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "ABC",
                            UserID = 1
                        },
                        new
                        {
                            ID = 2,
                            Name = "ABCD",
                            UserID = 2
                        });
                });

            modelBuilder.Entity("VocabularyProject.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "LHN",
                            Password = "LHN"
                        },
                        new
                        {
                            ID = 2,
                            Name = "VTAT",
                            Password = "VTAT"
                        });
                });

            modelBuilder.Entity("VocabularyProject.Models.Word", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SetID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("TiengViet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SetID");

                    b.ToTable("Words");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            English = "hiệu suất, buổi diễn",
                            SetID = 1,
                            TiengViet = "Performance"
                        },
                        new
                        {
                            ID = 2,
                            English = "Chỉ rõ, định rõ",
                            SetID = 1,
                            TiengViet = "Specify"
                        },
                        new
                        {
                            ID = 3,
                            English = "Giải quyết",
                            SetID = 1,
                            TiengViet = "Resolve"
                        });
                });

            modelBuilder.Entity("VocabularyProject.Models.Set", b =>
                {
                    b.HasOne("VocabularyProject.Models.User", "Users")
                        .WithMany("Sets")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK_Sets_Users");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("VocabularyProject.Models.Word", b =>
                {
                    b.HasOne("VocabularyProject.Models.Set", "Sets")
                        .WithMany("Words")
                        .HasForeignKey("SetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Words_Sets");

                    b.Navigation("Sets");
                });

            modelBuilder.Entity("VocabularyProject.Models.Set", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("VocabularyProject.Models.User", b =>
                {
                    b.Navigation("Sets");
                });
#pragma warning restore 612, 618
        }
    }
}
